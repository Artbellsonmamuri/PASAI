#!/bin/bash

# Runtime Configuration Generator for PASAI
# This script generates a configuration file with environment variables at runtime
# Place this file in your project root and make it executable: chmod +x generate-config.sh

echo "🔧 Generating runtime configuration..."

# Define the output file
CONFIG_FILE="./src/config.js"

# Create the configuration file with environment variables
cat > "$CONFIG_FILE" << EOF
/**
 * Runtime Configuration for PASAI
 * Generated at: $(date)
 * 
 * This file is automatically generated at container startup
 * and contains environment-specific configuration values.
 */

window.ENV_CONFIG = {
    // OpenAI Configuration
    OPENAI_API_KEY: '${OPENAI_API_KEY:-}',
    
    // Lens.org Configuration  
    LENS_TOKEN: '${LENS_TOKEN:-}',
    
    // Google APIs Configuration
    GOOGLE_API_KEY: '${GOOGLE_API_KEY:-}',
    GOOGLE_CX: '${GOOGLE_CX:-}',
    
    // Application Configuration
    NODE_ENV: '${NODE_ENV:-production}',
    VERSION: '${VERSION:-1.0.0}',
    
    // Feature Flags
    ENABLE_DEBUG: '${ENABLE_DEBUG:-false}',
    ENABLE_ANALYTICS: '${ENABLE_ANALYTICS:-true}',
    
    // Generated metadata
    GENERATED_AT: '$(date -u +"%Y-%m-%dT%H:%M:%SZ")',
    BUILD_ID: '${BUILD_ID:-unknown}'
};

// Configuration validator
window.validateConfig = function() {
    const config = window.ENV_CONFIG;
    const required = ['OPENAI_API_KEY', 'LENS_TOKEN'];
    const missing = [];
    
    required.forEach(key => {
        if (!config[key] || config[key] === '') {
            missing.push(key);
        }
    });
    
    if (missing.length > 0) {
        console.warn('Missing required configuration:', missing);
        return false;
    }
    
    console.log('Configuration validated successfully');
    return true;
};

// Auto-validate on load
if (typeof window !== 'undefined') {
    document.addEventListener('DOMContentLoaded', function() {
        window.validateConfig();
    });
}
EOF

echo "✅ Configuration file generated: $CONFIG_FILE"

# Verify the file was created
if [ -f "$CONFIG_FILE" ]; then
    echo "📄 File size: $(wc -c < "$CONFIG_FILE") bytes"
    echo "🔍 Configuration preview:"
    echo "   - OPENAI_API_KEY: ${OPENAI_API_KEY:+[SET]} ${OPENAI_API_KEY:-[NOT SET]}"
    echo "   - LENS_TOKEN: ${LENS_TOKEN:+[SET]} ${LENS_TOKEN:-[NOT SET]}"
    echo "   - GOOGLE_API_KEY: ${GOOGLE_API_KEY:+[SET]} ${GOOGLE_API_KEY:-[NOT SET]}"
    echo "   - GOOGLE_CX: ${GOOGLE_CX:+[SET]} ${GOOGLE_CX:-[NOT SET]}"
else
    echo "❌ Failed to create configuration file"
    exit 1
fi

echo "🎉 Runtime configuration generation completed!"